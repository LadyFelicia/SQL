**In this project, I downloaded the Spotify dataset with created table codes and inserted the Spotify data .csv into the Spotify data table.
After that, I explored the Spotify data tables to extract the information needed to answer my questions through querying.**

## CREATE TABLE CODE:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

## My SQL for analyzing the Spotify Dataset:

SELECT *
FROM BIT_DB.Spotifydata;

-- 1. Out of the 50 Artists in the dataset who is in the top 10 for danceability?
SELECT DISTINCT artist_name, MAX(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY MAX(danceability) DESC
LIMIT 10;

-- 2. What track has the longest song with more tempo and acoustics by what Artist?
SELECT DISTINCT artist_name,track_name,MAX(acousticness),MAX(tempo),MAX(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY MAX(duration_ms) desc
LIMIT 1;

-- 3. Which track was less popular?
SELECT DISTINCT track_name, MIN(popularity)
FROM BIT_DB.Spotifydata
GROUP BY track_name
Order by MIN(popularity) asc
LIMIT 1;

-- 4. What is the average energy by the Artist and track? 
SELECT DISTINCT AVG(energy),artist_name,track_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name
ORDER BY AVG(energy) desc;

